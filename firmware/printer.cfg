####################################################################################
#                                         3D MELLOW                                #
####################################################################################
## Fly micro documentation: http://mellow.klipper.cn/#/board/fly_micro/README
## Fly micro schematic: http://mellow.klipper.cn/#/board/fly_micro/schematic
## FLY Official Taobao Store: https://shop126791347.taobao.com/shop/view_shop.htm?spm=a230r.1.14.4.1a4840a8hyvpPJ&user_number_id=2464680006
## For after-sales service, please contact Taobao customer service
## FLY After-sales Technical Support Group: 621032883
## FLY#RRF Firmware Group: 786561979

#####################################################################
#      Notes
#####################################################################
##***Things to change/check:***
## MCU path                                [mcu] 
## Printer movement range                   xyz position   
## Thermistor type                          [extruder] and [heater_bed]
## Z endstop position                       [safe_z_home] 
## Z endstop offset                         [stepper_z] 
## PID tuning                               [extruder] and [heater_bed] 
## Extruder motor steps fine-tuning         [extruder] 

#####################################################################
#      file invocation
#####################################################################
#[include fluidd.cfg]          # FLUIDD include file.
[include mainsail.cfg]        # MAINSAIL include file.
#Choose the file you need to use

#####################################################################
#      Master ID Configuration
#####################################################################
[mcu]
serial:
### To check USB firmware id: ls /dev/serial/by-id/*
### Replace /dev/serial/by-id/usb-Klipper_rp2040_MELLOW-if00 with your id
#canbus_uuid: 114514114514
### To check CAN firmware id: ~/klippy#env/bin/python ~/klipper/scripts/canbus_query.py can0
### For CAN, replace serial with canbus_uuid: and add the id

#####################################################################
#      Temperature monitoring
#####################################################################
[temperature_sensor Micro4]        # Show board temperature
sensor_type: temperature_mcu
#####################################################################
# [temperature_sensor lite2]       # Host temperature
# sensor_type: temperature_host
[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100
#####################################################################
#      Kinematics and acceleration
#####################################################################
[printer]
kinematics: corexy
max_velocity: 500
max_accel: 5000
max_z_velocity: 15
max_z_accel: 300
square_corner_velocity: 6.0

[exclude_object]

#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_y]
## Refer to https://docs.vorondesign.com/build/startup/#v0
step_pin: gpio26
dir_pin:gpio25                                    # Check motor direction in link above. If inverted, add a ! before gpio3 
enable_pin:!gpio27
rotation_distance: 32 #40 for 20T pulleys
microsteps: 32
full_steps_per_rotation: 200                    # Set to 400 for 0.9° stepper motor, 200 for 1.8°
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_endstop: -2
position_max: 70
position_min:-2
homing_speed: 20                                # For sensorless homing, do not exceed 40mm/s   
homing_retract_dist: 0

[tmc2209 stepper_y]
uart_pin:gpio9
uart_address:2
interpolate: True
run_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 999999                        # Set to 999999 to enable stealthchop, 0 for spreadcycle
diag_pin: ^gpio15
driver_SGTHRS: 65

[stepper_x]
## Refer to https://docs.vorondesign.com/build/startup/#v0
step_pin:gpio1
dir_pin:gpio0                                    # Check motor direction in link above. If inverted, add a ! before gpio0
enable_pin:!gpio2
rotation_distance: 32 #40 for 20T pulleys
microsteps: 32
full_steps_per_rotation: 200
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: -1
position_max: 70
position_min:-1
homing_speed: 20 
homing_retract_dist: 0

[tmc2209 stepper_x]
uart_pin:gpio9
uart_address:1
interpolate: True
run_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 999999
diag_pin: ^gpio14
driver_SGTHRS: 60

#####################################################################
#   Z Stepper Settings
#####################################################################
[stepper_z]
## Refer to https://docs.vorondesign.com/build/startup/#v0
step_pin: gpio6
dir_pin: gpio3                                    # Check motor direction in link above. If inverted, add a ! before gpio25
enable_pin: !gpio7
rotation_distance: 40
microsteps: 32
endstop_pin: ^gpio13
position_endstop: 65
position_max: 65
position_min: -1.5
homing_speed: 20
second_homing_speed: 3.0
homing_retract_dist: 3.0

[tmc2209 stepper_z]
uart_pin:gpio9
uart_address:0
interpolate: True
run_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 999999

#####################################################################
#   Extruder
#####################################################################
[extruder]
## Type of sensor # common thermistors are (Generic 3950, ATC Semitec 104GT#2)
sensor_type: ATC Semitec 104GT-2
sensor_pin: gpio28

step_pin: gpio23
dir_pin: !gpio22
enable_pin: !gpio24
rotation_distance: 5.7
## rotation_distance = The original rotation_distance * actual extrusion length / requested extrusion length.
microsteps: 16
full_steps_per_rotation: 200    
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: gpio20
min_temp: 0
max_temp: 250
max_power: 1
min_extrude_temp: 150
pressure_advance: 0.2
pressure_advance_smooth_time: 0.040
#max_extrude_only_distance: 200.0   # If extrusion error, comment this, but it's better to re-slice
#Nozzle PID tuning command:  "PID_CALIBRATE HEATER=extruder TARGET=245
control: pid
pid_kp: 26.213
pid_ki: 1.304
pid_kd: 131.721
step_pulse_duration: 0.000004

[tmc2209 extruder]
uart_pin: gpio9
uart_address: 3
interpolate: True
run_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 999999

#####################################################################
# Fan Control
#####################################################################
[fan]
pin: gpio17
max_power: 1.0
kick_start_time: 0.5                                                # Increase if your fan does not start
off_below: 0.13
cycle_time: 0.010
#####################################################################
[heater_fan hotend_fan]
pin: gpio16
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0

#####################################################################
# Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[homing_override]
axes: xyz
set_position_z: 0
set_position_x: 0
set_position_y: 70
gcode:
  CUSTOM_HOME

[gcode_macro CUSTOM_HOME]
gcode:
  G90
  G0 Z5 F600
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'X' in params %}
      _HOME_X
  {% endif %}

  {% if home_all or 'Y' in params %}
      _HOME_Y
  {% endif %}

  {% if home_all or 'Z' in params %}
      _HOME_Z
  {% endif %}

#[safe_z_home]                     ## Only needed if you are using V0.0 or V0.1 Z endstop location
#home_xy_position: 35,35
#speed: 20.0
#z_hop: 2

## To be used with BED_SCREWS_ADJUST
#[bed_screws]
#screw1: 60,5
#screw1_name: front screw
#screw2: 5,115
#screw2_name: back left
#screw3: 115,115
#screw3_name: back right
#Probe_height: 0.1

#####################################################################
# Macros
#####################################################################

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customize for your slicer
gcode:
    G28                            ; home all axes
    G90                            ; absolute positioning    
    G1 Z20 F3000                   ; move nozzle away from bed

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-4.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X60 Y{max_y-10} F3600          ; park nozzle at rear

[gcode_macro LOAD_FILAMENT]
gcode:
  M83                            ; set extruder to relative
  G1 E30 F300                    ; load
  G1 E15 F150                    ; prime nozzle with filament
  M82                            ; set extruder to absolute

[gcode_macro UNLOAD_FILAMENT]
gcode:
  M83                            ; set extruder to relative
  G1 E10 F300                    ; extrude a little to soften tip
  G1 E-40 F1800                  ; retract some, but not too much or it will jam
  M82                            ; set extruder to absolute

[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT_RATIO = 0.7 %} # By default, drop motor current during homing. Adjust if skipping occurs.
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_Y}

    # Home
    G28 X
    # Move away
    G91
    G1 X10 F1200

    # Wait for StallGuard registers to clear
    M400
    G90
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT_RATIO = 0.8 %} # By default, drop motor current during homing. Adjust if skipping occurs.
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_Y}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y10 F1200

    # Wait for StallGuard registers to clear
    M400
    G90
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Z]
gcode:
    G90
    G28 Z
    G1 Z30

[gcode_macro TEST_SPEED]
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

description: Test for max speed and acceleration parameters for the printer. Procedure: Home -> ReadPositionFromMCU -> MovesToolhead@Vel&Accel -> Home -> ReadPositionfromMCU

gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Minimum Cruise Ratio
    {% set min_cruise_ratio = params.MIN_CRUISE_RATIO|default(0.5)|float %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x %}
        {% if x_min < 0 %}
            {% set x_min = 0 %}
        {% endif %}
    
        {% set y_min = printer.toolhead.axis_minimum.y %}
        {% if y_min < 0 %}
            {% set y_min = 0 %}
        {% endif %}
    
        {% set x_min = x_min + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = y_min + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} MINIMUM_CRUISE_RATIO={min_cruise_ratio}
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
    {% endif %}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small pattern box
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio} 
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
    {% endif %}

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 44.874
#*# pid_ki = 9.650
#*# pid_kd = 52.166
